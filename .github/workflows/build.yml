name: Build Python Package
on:
  workflow_call:
    inputs:
      version:
        description: 'Version to build'
        required: false
        type: string
        default: "1.0.0"
      environment:
        description: 'Environment where the secrets are stored'
        required: false
        type: string
    secrets:
      GPG_PRIVATE_KEY:
        description: 'GPG private key'
        required: false
      GPG_PASSPHRASE:
        description: 'GPG passphrase'
        required: false

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: audit

      - uses: actions/checkout@v4

      - uses: pantos-io/ci-workflows/.github/actions/install-poetry@v1

      - name: Build package
        run: |
          make check-version VERSION=${{ needs.define-environment.outputs.version }}
          make build

      - name: Freeze dependencies
        run: |
          poetry self add poetry-plugin-freeze
          poetry freeze-wheel
          # Copy the file "METADATA" from the wheel to "PKG-INFO" in the sdist
          # Unzip wheel and sdist
          mkdir tmp
          cp dist/*.whl tmp/wheel.zip
          unzip tmp/wheel.zip -d tmp/wheel/
          # Untar sdist
          mkdir tmp/sdist
          tar -xzf dist/*.tar.gz -C tmp/sdist/
          # Copy the file
          cp tmp/wheel/*.dist-info/METADATA tmp/sdist/*/PKG-INFO
          # Tar the sdist again
          tar -czf dist/$(ls dist | grep .tar.gz) -C tmp/sdist/ .
          # Remove the temporary directories
          rm -rf tmp

      - name: Check secrets
        id: is-signed-build
        run: |
          echo "HAS_SECRETS=$(if [ -n "$GPG_PRIVATE_KEY" ] && [ -n "$GPG_PASSPHRASE" ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_OUTPUT
          echo "built-version=$(poetry version --short)" >> $GITHUB_OUTPUT
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - uses: sigstore/gh-action-sigstore-python@v2.1.1
        if: ${{ steps.is-signed-build.outputs.HAS_SECRETS == 'true' }}
        with:
          inputs: release/*

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
